{"ast":null,"code":"import _asyncToGenerator from \"/Users/f_orozco/Documents/INE/angular-ldap-login/angular-ldap-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { inject, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction LoginComponent_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"p\", 6);\n    i0.…µ…µtext(1);\n    i0.…µ…µelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.…µ…µnextContext();\n    i0.…µ…µadvance();\n    i0.…µ…µtextInterpolate(ctx_r0.error());\n  }\n}\nexport class LoginComponent {\n  constructor() {\n    this.auth = inject(AuthService);\n    this.router = inject(Router);\n    this.username = ''; // Limpio para que el usuario ingrese sus credenciales\n    this.password = '';\n    this.loading = signal(false);\n    this.error = signal(null);\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      console.log('üöÄ [LoginComponent] Iniciando proceso de autenticaci√≥n LDAP:', {\n        username: _this.username,\n        timestamp: new Date().toISOString()\n      });\n      _this.error.set(null);\n      _this.loading.set(true);\n      try {\n        console.log('‚è≥ [LoginComponent] Enviando credenciales al servidor LDAP...');\n        const resp = yield _this.auth.login(_this.username, _this.password).toPromise();\n        console.log('üì® [LoginComponent] Respuesta completa del servidor LDAP:', {\n          response: resp,\n          ok: resp?.ok,\n          token: resp?.token ? '***TOKEN_PRESENTE***' : 'NO_TOKEN',\n          user: resp?.user,\n          error: resp?.error,\n          timestamp: new Date().toISOString()\n        });\n        if (resp?.ok && resp.token) {\n          console.log('‚úÖ [LoginComponent] Login exitoso, guardando token y redirigiendo');\n          console.log('üë§ [LoginComponent] Informaci√≥n del usuario LDAP:', resp.user);\n          _this.auth.token = resp.token;\n          _this.router.navigateByUrl('/');\n        } else {\n          console.log('‚ùå [LoginComponent] Login fallido:', resp?.error || 'Error de autenticaci√≥n');\n          _this.error.set(resp?.error || 'Error de autenticaci√≥n');\n        }\n      } catch (e) {\n        console.error('üí• [LoginComponent] Error en la comunicaci√≥n con el servidor LDAP:', {\n          error: e,\n          errorMessage: e?.message,\n          errorStatus: e?.status,\n          errorStatusText: e?.statusText,\n          errorDetails: e?.error,\n          timestamp: new Date().toISOString()\n        });\n        // Manejo espec√≠fico de errores\n        if (e?.status === 401) {\n          console.error('üîê [LoginComponent] Error 401: Credenciales incorrectas o usuario no autorizado');\n          _this.error.set('Usuario o contrase√±a incorrectos. Verifica tus credenciales LDAP.');\n        } else if (e?.status === 0) {\n          console.error('üåê [LoginComponent] Error de conexi√≥n: Backend no disponible');\n          _this.error.set('No se puede conectar al servidor. Verifica que el backend est√© corriendo en localhost:4000');\n        } else if (e?.status >= 500) {\n          console.error('üî• [LoginComponent] Error del servidor LDAP');\n          _this.error.set('Error interno del servidor LDAP. Contacta al administrador.');\n        } else {\n          _this.error.set(e?.error?.error || e?.message || 'Error de comunicaci√≥n con el servidor');\n        }\n      } finally {\n        _this.loading.set(false);\n        console.log('üèÅ [LoginComponent] Proceso de autenticaci√≥n terminado');\n      }\n    })();\n  }\n  static {\n    this.…µfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)();\n    };\n  }\n  static {\n    this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      standalone: true,\n      features: [i0.…µ…µStandaloneFeature],\n      decls: 13,\n      vars: 4,\n      consts: [[1, \"card\"], [3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"username\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 3, \"disabled\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.…µ…µelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.…µ…µtext(2, \"Login LDAP\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(3, \"form\", 1);\n          i0.…µ…µlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.…µ…µelementStart(4, \"label\");\n          i0.…µ…µtext(5, \"Usuario\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(6, \"input\", 2);\n          i0.…µ…µtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n            i0.…µ…µtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n            return $event;\n          });\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(7, \"label\");\n          i0.…µ…µtext(8, \"Contrase\\u00F1a\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(9, \"input\", 3);\n          i0.…µ…µtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n            i0.…µ…µtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return $event;\n          });\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(10, \"button\", 4);\n          i0.…µ…µtext(11, \"Entrar\");\n          i0.…µ…µelementEnd()();\n          i0.…µ…µtemplate(12, LoginComponent_p_12_Template, 2, 1, \"p\", 5);\n          i0.…µ…µelementEnd();\n        }\n        if (rf & 2) {\n          i0.…µ…µadvance(6);\n          i0.…µ…µtwoWayProperty(\"ngModel\", ctx.username);\n          i0.…µ…µadvance(3);\n          i0.…µ…µtwoWayProperty(\"ngModel\", ctx.password);\n          i0.…µ…µadvance();\n          i0.…µ…µproperty(\"disabled\", ctx.loading());\n          i0.…µ…µadvance(2);\n          i0.…µ…µproperty(\"ngIf\", ctx.error());\n        }\n      },\n      dependencies: [CommonModule, i1.NgIf, FormsModule, i2.…µNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n      styles: [\".card[_ngcontent-%COMP%]{max-width:360px;margin:40px auto;padding:24px;border:1px solid #ddd;border-radius:12px}\\nlabel[_ngcontent-%COMP%]{display:block;margin-top:12px}\\ninput[_ngcontent-%COMP%]{width:100%;padding:8px;margin-top:6px}\\nbutton[_ngcontent-%COMP%]{margin-top:16px;width:100%;padding:10px}\\n.error[_ngcontent-%COMP%]{color:#b00020;margin-top:12px}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMscUJBQXFCLENBQUMsa0JBQWtCO0FBQzVGLE1BQU0sYUFBYSxDQUFDLGVBQWU7QUFDbkMsTUFBTSxVQUFVLENBQUMsV0FBVyxDQUFDLGNBQWM7QUFDM0MsT0FBTyxlQUFlLENBQUMsVUFBVSxDQUFDLFlBQVk7QUFDOUMsT0FBTyxhQUFhLENBQUMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJke21heC13aWR0aDozNjBweDttYXJnaW46NDBweCBhdXRvO3BhZGRpbmc6MjRweDtib3JkZXI6MXB4IHNvbGlkICNkZGQ7Ym9yZGVyLXJhZGl1czoxMnB4fVxubGFiZWx7ZGlzcGxheTpibG9jazttYXJnaW4tdG9wOjEycHh9XG5pbnB1dHt3aWR0aDoxMDAlO3BhZGRpbmc6OHB4O21hcmdpbi10b3A6NnB4fVxuYnV0dG9ue21hcmdpbi10b3A6MTZweDt3aWR0aDoxMDAlO3BhZGRpbmc6MTBweH1cbi5lcnJvcntjb2xvcjojYjAwMDIwO21hcmdpbi10b3A6MTJweH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["inject","signal","CommonModule","FormsModule","AuthService","Router","i0","…µ…µelementStart","…µ…µtext","…µ…µelementEnd","…µ…µadvance","…µ…µtextInterpolate","ctx_r0","error","LoginComponent","constructor","auth","router","username","password","loading","onSubmit","_this","_asyncToGenerator","console","log","timestamp","Date","toISOString","set","resp","login","toPromise","response","ok","token","user","navigateByUrl","e","errorMessage","message","errorStatus","status","errorStatusText","statusText","errorDetails","selectors","standalone","features","…µ…µStandaloneFeature","decls","vars","consts","template","LoginComponent_Template","rf","ctx","…µ…µlistener","LoginComponent_Template_form_ngSubmit_3_listener","…µ…µtwoWayListener","LoginComponent_Template_input_ngModelChange_6_listener","$event","…µ…µtwoWayBindingSet","LoginComponent_Template_input_ngModelChange_9_listener","…µ…µtemplate","LoginComponent_p_12_Template","…µ…µtwoWayProperty","…µ…µproperty","i1","NgIf","i2","…µNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","styles"],"sources":["/Users/f_orozco/Documents/INE/angular-ldap-login/angular-ldap-login/src/app/login/login.component.ts","/Users/f_orozco/Documents/INE/angular-ldap-login/angular-ldap-login/src/app/login/login.component.html"],"sourcesContent":["import { Component, inject, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  standalone: true,\n  selector: 'app-login',\n  imports: [CommonModule, FormsModule],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  private auth = inject(AuthService);\n  private router = inject(Router);\n\n  username = ''; // Limpio para que el usuario ingrese sus credenciales\n  password = '';\n  loading = signal(false);\n  error = signal<string | null>(null);\n\n  async onSubmit() {\n    console.log('üöÄ [LoginComponent] Iniciando proceso de autenticaci√≥n LDAP:', {\n      username: this.username,\n      timestamp: new Date().toISOString()\n    });\n\n    this.error.set(null);\n    this.loading.set(true);\n\n    try {\n      console.log('‚è≥ [LoginComponent] Enviando credenciales al servidor LDAP...');\n      const resp = await this.auth.login(this.username, this.password).toPromise();\n\n      console.log('üì® [LoginComponent] Respuesta completa del servidor LDAP:', {\n        response: resp,\n        ok: resp?.ok,\n        token: resp?.token ? '***TOKEN_PRESENTE***' : 'NO_TOKEN',\n        user: resp?.user,\n        error: resp?.error,\n        timestamp: new Date().toISOString()\n      });\n\n      if (resp?.ok && resp.token) {\n        console.log('‚úÖ [LoginComponent] Login exitoso, guardando token y redirigiendo');\n        console.log('üë§ [LoginComponent] Informaci√≥n del usuario LDAP:', resp.user);\n        this.auth.token = resp.token;\n        this.router.navigateByUrl('/');\n      } else {\n        console.log('‚ùå [LoginComponent] Login fallido:', resp?.error || 'Error de autenticaci√≥n');\n        this.error.set(resp?.error || 'Error de autenticaci√≥n');\n      }\n    } catch (e: any) {\n      console.error('üí• [LoginComponent] Error en la comunicaci√≥n con el servidor LDAP:', {\n        error: e,\n        errorMessage: e?.message,\n        errorStatus: e?.status,\n        errorStatusText: e?.statusText,\n        errorDetails: e?.error,\n        timestamp: new Date().toISOString()\n      });\n\n      // Manejo espec√≠fico de errores\n      if (e?.status === 401) {\n        console.error('üîê [LoginComponent] Error 401: Credenciales incorrectas o usuario no autorizado');\n        this.error.set('Usuario o contrase√±a incorrectos. Verifica tus credenciales LDAP.');\n      } else if (e?.status === 0) {\n        console.error('üåê [LoginComponent] Error de conexi√≥n: Backend no disponible');\n        this.error.set('No se puede conectar al servidor. Verifica que el backend est√© corriendo en localhost:4000');\n      } else if (e?.status >= 500) {\n        console.error('üî• [LoginComponent] Error del servidor LDAP');\n        this.error.set('Error interno del servidor LDAP. Contacta al administrador.');\n      } else {\n        this.error.set(e?.error?.error || e?.message || 'Error de comunicaci√≥n con el servidor');\n      }\n    } finally {\n      this.loading.set(false);\n      console.log('üèÅ [LoginComponent] Proceso de autenticaci√≥n terminado');\n    }\n  }\n}","<div class=\"card\">\n  <h2>Login LDAP</h2>\n  <form (ngSubmit)=\"onSubmit()\">\n    <label>Usuario</label>\n    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" required />\n    <label>Contrase√±a</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required />\n    <button type=\"submit\" [disabled]=\"loading()\">Entrar</button>\n  </form>\n  <p class=\"error\" *ngIf=\"error()\">{{ error() }}</p>\n</div>"],"mappings":";AAAA,SAAoBA,MAAM,EAAEC,MAAM,QAAQ,eAAe;AACzD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,MAAM,QAAQ,iBAAiB;;;;;;ICKtCC,EAAA,CAAAC,cAAA,WAAiC;IAAAD,EAAA,CAAAE,MAAA,GAAa;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAjBH,EAAA,CAAAI,SAAA,EAAa;IAAbJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,KAAA,GAAa;;;ADIhD,OAAM,MAAOC,cAAc;EAP3BC,YAAA;IAQU,KAAAC,IAAI,GAAGhB,MAAM,CAACI,WAAW,CAAC;IAC1B,KAAAa,MAAM,GAAGjB,MAAM,CAACK,MAAM,CAAC;IAE/B,KAAAa,QAAQ,GAAG,EAAE,CAAC,CAAC;IACf,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,OAAO,GAAGnB,MAAM,CAAC,KAAK,CAAC;IACvB,KAAAY,KAAK,GAAGZ,MAAM,CAAgB,IAAI,CAAC;;EAE7BoB,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACZC,OAAO,CAACC,GAAG,CAAC,8DAA8D,EAAE;QAC1EP,QAAQ,EAAEI,KAAI,CAACJ,QAAQ;QACvBQ,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;OAClC,CAAC;MAEFN,KAAI,CAACT,KAAK,CAACgB,GAAG,CAAC,IAAI,CAAC;MACpBP,KAAI,CAACF,OAAO,CAACS,GAAG,CAAC,IAAI,CAAC;MAEtB,IAAI;QACFL,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;QAC3E,MAAMK,IAAI,SAASR,KAAI,CAACN,IAAI,CAACe,KAAK,CAACT,KAAI,CAACJ,QAAQ,EAAEI,KAAI,CAACH,QAAQ,CAAC,CAACa,SAAS,EAAE;QAE5ER,OAAO,CAACC,GAAG,CAAC,2DAA2D,EAAE;UACvEQ,QAAQ,EAAEH,IAAI;UACdI,EAAE,EAAEJ,IAAI,EAAEI,EAAE;UACZC,KAAK,EAAEL,IAAI,EAAEK,KAAK,GAAG,sBAAsB,GAAG,UAAU;UACxDC,IAAI,EAAEN,IAAI,EAAEM,IAAI;UAChBvB,KAAK,EAAEiB,IAAI,EAAEjB,KAAK;UAClBa,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;SAClC,CAAC;QAEF,IAAIE,IAAI,EAAEI,EAAE,IAAIJ,IAAI,CAACK,KAAK,EAAE;UAC1BX,OAAO,CAACC,GAAG,CAAC,kEAAkE,CAAC;UAC/ED,OAAO,CAACC,GAAG,CAAC,mDAAmD,EAAEK,IAAI,CAACM,IAAI,CAAC;UAC3Ed,KAAI,CAACN,IAAI,CAACmB,KAAK,GAAGL,IAAI,CAACK,KAAK;UAC5Bb,KAAI,CAACL,MAAM,CAACoB,aAAa,CAAC,GAAG,CAAC;SAC/B,MAAM;UACLb,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEK,IAAI,EAAEjB,KAAK,IAAI,wBAAwB,CAAC;UACzFS,KAAI,CAACT,KAAK,CAACgB,GAAG,CAACC,IAAI,EAAEjB,KAAK,IAAI,wBAAwB,CAAC;;OAE1D,CAAC,OAAOyB,CAAM,EAAE;QACfd,OAAO,CAACX,KAAK,CAAC,oEAAoE,EAAE;UAClFA,KAAK,EAAEyB,CAAC;UACRC,YAAY,EAAED,CAAC,EAAEE,OAAO;UACxBC,WAAW,EAAEH,CAAC,EAAEI,MAAM;UACtBC,eAAe,EAAEL,CAAC,EAAEM,UAAU;UAC9BC,YAAY,EAAEP,CAAC,EAAEzB,KAAK;UACtBa,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;SAClC,CAAC;QAEF;QACA,IAAIU,CAAC,EAAEI,MAAM,KAAK,GAAG,EAAE;UACrBlB,OAAO,CAACX,KAAK,CAAC,iFAAiF,CAAC;UAChGS,KAAI,CAACT,KAAK,CAACgB,GAAG,CAAC,mEAAmE,CAAC;SACpF,MAAM,IAAIS,CAAC,EAAEI,MAAM,KAAK,CAAC,EAAE;UAC1BlB,OAAO,CAACX,KAAK,CAAC,8DAA8D,CAAC;UAC7ES,KAAI,CAACT,KAAK,CAACgB,GAAG,CAAC,4FAA4F,CAAC;SAC7G,MAAM,IAAIS,CAAC,EAAEI,MAAM,IAAI,GAAG,EAAE;UAC3BlB,OAAO,CAACX,KAAK,CAAC,6CAA6C,CAAC;UAC5DS,KAAI,CAACT,KAAK,CAACgB,GAAG,CAAC,6DAA6D,CAAC;SAC9E,MAAM;UACLP,KAAI,CAACT,KAAK,CAACgB,GAAG,CAACS,CAAC,EAAEzB,KAAK,EAAEA,KAAK,IAAIyB,CAAC,EAAEE,OAAO,IAAI,uCAAuC,CAAC;;OAE3F,SAAS;QACRlB,KAAI,CAACF,OAAO,CAACS,GAAG,CAAC,KAAK,CAAC;QACvBL,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;;IACtE;EACH;;;uBAnEWX,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAAgC,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAA1C,EAAA,CAAA2C,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCZzBjD,EADF,CAAAC,cAAA,aAAkB,SACZ;UAAAD,EAAA,CAAAE,MAAA,iBAAU;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACnBH,EAAA,CAAAC,cAAA,cAA8B;UAAxBD,EAAA,CAAAmD,UAAA,sBAAAC,iDAAA;YAAA,OAAYF,GAAA,CAAAnC,QAAA,EAAU;UAAA,EAAC;UAC3Bf,EAAA,CAAAC,cAAA,YAAO;UAAAD,EAAA,CAAAE,MAAA,cAAO;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACtBH,EAAA,CAAAC,cAAA,eAAqE;UAAlDD,EAAA,CAAAqD,gBAAA,2BAAAC,uDAAAC,MAAA;YAAAvD,EAAA,CAAAwD,kBAAA,CAAAN,GAAA,CAAAtC,QAAA,EAAA2C,MAAA,MAAAL,GAAA,CAAAtC,QAAA,GAAA2C,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAsB;UAAzCvD,EAAA,CAAAG,YAAA,EAAqE;UACrEH,EAAA,CAAAC,cAAA,YAAO;UAAAD,EAAA,CAAAE,MAAA,sBAAU;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACzBH,EAAA,CAAAC,cAAA,eAAyE;UAAlDD,EAAA,CAAAqD,gBAAA,2BAAAI,uDAAAF,MAAA;YAAAvD,EAAA,CAAAwD,kBAAA,CAAAN,GAAA,CAAArC,QAAA,EAAA0C,MAAA,MAAAL,GAAA,CAAArC,QAAA,GAAA0C,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAsB;UAA7CvD,EAAA,CAAAG,YAAA,EAAyE;UACzEH,EAAA,CAAAC,cAAA,iBAA6C;UAAAD,EAAA,CAAAE,MAAA,cAAM;UACrDF,EADqD,CAAAG,YAAA,EAAS,EACvD;UACPH,EAAA,CAAA0D,UAAA,KAAAC,4BAAA,eAAiC;UACnC3D,EAAA,CAAAG,YAAA,EAAM;;;UANiBH,EAAA,CAAAI,SAAA,GAAsB;UAAtBJ,EAAA,CAAA4D,gBAAA,YAAAV,GAAA,CAAAtC,QAAA,CAAsB;UAElBZ,EAAA,CAAAI,SAAA,GAAsB;UAAtBJ,EAAA,CAAA4D,gBAAA,YAAAV,GAAA,CAAArC,QAAA,CAAsB;UACvBb,EAAA,CAAAI,SAAA,EAAsB;UAAtBJ,EAAA,CAAA6D,UAAA,aAAAX,GAAA,CAAApC,OAAA,GAAsB;UAE5Bd,EAAA,CAAAI,SAAA,GAAa;UAAbJ,EAAA,CAAA6D,UAAA,SAAAX,GAAA,CAAA3C,KAAA,GAAa;;;qBDArBX,YAAY,EAAAkE,EAAA,CAAAC,IAAA,EAAElE,WAAW,EAAAmE,EAAA,CAAAC,aAAA,EAAAD,EAAA,CAAAE,oBAAA,EAAAF,EAAA,CAAAG,eAAA,EAAAH,EAAA,CAAAI,oBAAA,EAAAJ,EAAA,CAAAK,iBAAA,EAAAL,EAAA,CAAAM,OAAA,EAAAN,EAAA,CAAAO,MAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}